version: 2.1

executors:
  macos_executor:
    macos:
      xcode: "11.5.0"

commands:
  setup:
    steps:
      - checkout
      - configure_secrets
      - configure_xcode_signing
      - restore_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Gems
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  
  use_system_ruby:
    description: "Reset the VMs ruby env to use the system provided ruby for Xcode sake"
    steps:
      - run:
          name: Reset to system ruby
          command: |
            echo "system" > .ruby-version
            chruby system
            
  store_scan_artifacts:
    steps:
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
  
  store_test_output:
    steps:
      - store_artifacts:
            path: "./fastlane/Test Output"
            destination: scan-test-output    
  
  store_scan_results:
    steps:
      - store_test_results:
            path: "./fastlane/Test Output"
  
  store_frameworks:
    steps:
      - store_artifacts:
            path: "./AppSizer/AppSizer/Frameworks/TwilioVerify.zip"
  
  configure_secrets:
    steps:
      - run:
          name: "Installing secrets"
          command: ./Scripts/extract-secrets.sh

  configure_xcode_signing:
    steps:
      - run:
          name: "Install signing certificates"
          command: ./Scripts/configure-keychain.sh
      - run:
          name: "Install provisioning profiles"
          command: ./Scripts/configure-provisioning-profiles.sh
  test:
    parameters:
      scheme:
        type: string
    steps:
      - setup
      - run:
          name: Test
          command: bundle exec fastlane test scheme:<< parameters.scheme >>
      - store_scan_artifacts
      - store_test_output
      - store_scan_results

  build_framework:
    parameters:
      scheme:
        type: string
      artifact:
        type: string
    steps:
      - setup 
      - run:
          name: "Build Universal Framework"
          command: bundle exec fastlane build_universal_framework
      - run:
          name: "Zip Framework"
          command: |
                  cd ~/Desktop
                  zip -r << parameters.artifact >>.zip << parameters.artifact >>.framework
      - store_artifacts:
          path: ~/Desktop/<< parameters.artifact >>.zip

  build_app_sizer:
    steps:
      - setup
      - use_system_ruby
      # - build_frameworks
      # - run:
      #     name: "Copy Frameworks"
      #     command: cp -R temp/DerivedData/Build/Products/Release-universal/. AppSizer/AppSizer/Frameworks
      # - run:
      #     name: "Zip Files"
      #     command: |
      #             cd AppSizer/AppSizer/Frameworks
      #             zip -r TwilioVerify.zip TwilioVerify.framework TwilioSecurity.framework
      # - store_frameworks
      - run:
          name: "Build AppSizer App"
          command: ./Scripts/build-app-sizer.sh

jobs:
  TwilioSecurity Unit Tests:
    executor: macos_executor
    steps:
      - test:
          scheme: TwilioSecurity
  TwilioVerify Unit Tests:
    executor: macos_executor
    steps:
      - test:
          scheme: TwilioVerify
  TwilioVerifyDemo Unit Tests:
    executor: macos_executor
    steps:
      - test:
          scheme: TwilioVerifyDemo
  Build TwilioSecurity:
    executor: macos_executor
    steps:
      - build_framework:
          scheme: TwilioSecuritySDK
          artifact: TwilioSecurity
  Build TwilioVerify:
    executor: macos_executor
    steps:
      - build_framework:
          scheme: TwilioVerifySDK
          artifact: TwilioVerify
  Size report:
    executor: macos_executor
    steps:
      - build_app_sizer
     
workflows:
  build_and_test:
    jobs:
      - TwilioSecurity Unit Tests
      - TwilioVerify Unit Tests
      # TODO: Enable this job when the target have tests otherwise the job will fail
      #- TwilioVerifyDemo Unit Tests
      - Build TwilioSecurity:
          requires:
            - TwilioSecurity Unit Tests
            - TwilioVerify Unit Tests
      - Build TwilioVerify:
          requires:
            - TwilioSecurity Unit Tests
            - TwilioVerify Unit Tests
      # - Size report:
      #     requires:
      #       - Build TwilioSecurity
      #       - Build TwilioVerify

      
      