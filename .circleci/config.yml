version: 2.1

executors:
  macos_executor:
    macos:
      xcode: "12.4.0"

commands:
  setup:
    steps:
      - restore_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Gems
          command: bundle check || bundle install
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  use_system_ruby:
    description: "Reset the VMs ruby env to use the system provided ruby for Xcode sake"
    steps:
      - run:
          name: Reset to system ruby
          command: |
            echo "system" > .ruby-version
            chruby system
            
  store_scan_artifacts:
    steps:
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
  
  store_test_output:
    steps:
      - store_artifacts:
            path: "./fastlane/Test Output"
            destination: scan-test-output    
  
  store_scan_results:
    steps:
      - store_test_results:
            path: "./fastlane/Test Output"
  
  store_frameworks:
    steps:
      - store_artifacts:
            path: "./AppSizer/AppSizer/Frameworks/TwilioVerify.zip"

  configure_google_service_account:
    steps:
      - run:
          name: Configure Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > gcloud-service-key.json

  configure_gcloud_app_distribution_service:
    steps:
      - run:
          name: Configure GCloud App Distribution service
          command: echo $GCLOUD_APP_DISTRIBUTION_SERVICE_KEY > ${HOME}/gcloud-app-distribution-service-key.json

  unit_tests:
    parameters:
      test_plan:
        type: string
    steps:
      - checkout
      - setup
      - run:
          name: Unit Tests
          command: bundle exec fastlane unit_tests test_plan:<< parameters.test_plan >>
      - store_scan_artifacts
      - store_test_output
      - store_scan_results
  
  integration_tests:
    parameters:
      test_plan:
        type: string
      ftl_devices:
        type: string
        default: single
    steps:
      - checkout
      - setup
      - configure_google_service_account
      - run:
          name: Integration Tests
          command: bundle exec fastlane integration_tests test_plan:<< parameters.test_plan >> ftl_devices:<< parameters.ftl_devices >>
      - store_scan_artifacts

  build_framework:
    parameters:
      scheme:
        type: string
      artifact:
        type: string
    steps:
      - checkout
      - setup
      - run:
          name: "Build Universal Framework"
          command: bundle exec fastlane build_universal_framework
      - run:
          name: "Zip Framework"
          command: |
                  cd ~/Desktop
                  zip -r << parameters.artifact >>.framework.zip << parameters.artifact >>.framework
      - store_artifacts:
          path: ~/Desktop/<< parameters.artifact >>.framework.zip
      - persist_to_workspace:
          root: ~/Desktop
          paths:
            - TwilioVerify.framework

  build_app_sizer:
    steps:
      - checkout
      - use_system_ruby
      - setup
      - attach_workspace:
          at: ~/Desktop
      - run:
          name: "Copy Frameworks"
          command: cp -a ~/Desktop/. ./AppSizer/AppSizer/Frameworks
      - run:
          name: "Build AppSizer App"
          command: bundle exec fastlane build_app_sizer
      - run:
          name: "Copy Report"
          command: cp ./temp/SizeReport/SizeImpact.md ~/Desktop
      - store_artifacts:
          path: "./temp/SizeReport/TwilioVerify Size Impact Report.txt"
      - persist_to_workspace:
          root: ~/Desktop
          paths:
            - SizeImpact.md
  
  release:
    steps:
      - checkout
      - setup
      - attach_workspace:
          at: ~/Desktop
      - configure_gcloud_app_distribution_service
      - run:
          name: "Release SDK"
          command: bundle exec fastlane release

  distribute_debug_sample_app:
    parameters:
      env:
        description: environment name (DEV, STAGE, PROD)
        type: string     
      base_url:
        description: API base URL
        type: string
    steps:
      - run:
          name: Generating APK for internal distribution
          command: bundle exec fastlane distribute_debug_sample_app env:<<parameters.env>> url:<<parameters.base_url>>
jobs:
  Distribute debug sample app:
    executor: macos_executor
    steps:
      - checkout
      - setup
      - configure_gcloud_app_distribution_service
      - distribute_debug_sample_app:
          env: "DEV"
          base_url: $DEV_URL
      - distribute_debug_sample_app:
          env: "STAGE"
          base_url: $STAGE_URL
      - distribute_debug_sample_app:
          env: "PROD"
          base_url: $PROD_URL

  Unit Tests and Lint:
    executor: macos_executor
    steps:
      - unit_tests:
          test_plan: CompleteSuite

  Integration Tests Single Device:
    executor: macos_executor
    steps:
      - integration_tests:
          test_plan: IntegrationSuite

  Integration Tests All Devices:
    executor: macos_executor
    steps:
      - integration_tests:
          test_plan: IntegrationSuite
          ftl_devices: all

  TwilioVerifyDemo Unit Tests:
    executor: macos_executor
    steps:
      - test:
          scheme: TwilioVerifyDemo

  Build TwilioVerify:
    executor: macos_executor
    steps:
      - build_framework:
          scheme: TwilioVerifySDK
          artifact: TwilioVerify

  Size report:
    executor: macos_executor
    steps:
      - build_app_sizer
  Release SDK:
    executor: macos_executor
    steps:
      - release
     
workflows:
  build_and_test:
    jobs:
      - Unit Tests and Lint
      - Integration Tests Single Device:
          requires:
            - Unit Tests and Lint
      - Integration Tests All Devices:
          requires:
            - Integration Tests Single Device
      - Build TwilioVerify:
          requires:
            - Integration Tests Single Device
            - Unit Tests and Lint
      - Size report:
          requires:
            - Build TwilioVerify
      - Distribute debug sample app:
          requires:
           - Build TwilioVerify
          filters:
           branches:
             only:
               - /feature.*/
               - /release.*/
               - /hotfix.*/
               - dev              
      - Release SDK:
          requires:
            - Size report
          filters:
            branches:
              only:
                - main
      # TODO: Enable this job when the target have tests otherwise the job will fail
      #- TwilioVerifyDemo Unit Tests
      # Uncomment this part when all the steps to release a new version are done      
