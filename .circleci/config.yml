version: 2.1

executors:
  macos_executor:
    macos:
      xcode: "11.5.0"

commands:
  setup:
    steps:
      - configure_secrets
      - configure_xcode_signing
      - restore_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Gems
          command: bundle check || bundle install
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  
  use_system_ruby:
    description: "Reset the VMs ruby env to use the system provided ruby for Xcode sake"
    steps:
      - run:
          name: Reset to system ruby
          command: |
            echo "system" > .ruby-version
            chruby system
            
  store_scan_artifacts:
    steps:
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
  
  store_test_output:
    steps:
      - store_artifacts:
            path: "./fastlane/Test Output"
            destination: scan-test-output    
  
  store_scan_results:
    steps:
      - store_test_results:
            path: "./fastlane/Test Output"
  
  store_frameworks:
    steps:
      - store_artifacts:
            path: "./AppSizer/AppSizer/Frameworks/TwilioVerify.zip"
  
  configure_secrets:
    steps:
      - run:
          name: "Installing secrets"
          command: ./Scripts/extract-secrets.sh

  configure_xcode_signing:
    steps:
      - run:
          name: "Install signing certificates"
          command: ./Scripts/configure-keychain.sh
      - run:
          name: "Install provisioning profiles"
          command: ./Scripts/configure-provisioning-profiles.sh
  
  bump_version:
    parameters:
      change_type:
        type: string
    steps:
      - run:
          name: "Bumping version"
          command: ./Scripts/bump-version.swift <<parameters.change_type>>

  test:
    parameters:
      test_plan:
        type: string
    steps:
      - checkout
      - setup
      - run:
          name: Test
          command: bundle exec fastlane test test_plan:<< parameters.test_plan >>
      - store_scan_artifacts
      - store_test_output
      - store_scan_results

  build_framework:
    parameters:
      scheme:
        type: string
      artifact:
        type: string
    steps:
      - checkout
      - setup
      - run:
          name: "Build Universal Framework"
          command: bundle exec fastlane build_universal_framework
      - run:
          name: "Zip Framework"
          command: |
                  cd ~/Desktop
                  zip -r << parameters.artifact >>.framework.zip << parameters.artifact >>.framework
      - store_artifacts:
          path: ~/Desktop/<< parameters.artifact >>.framework.zip
      - persist_to_workspace:
          root: ~/Desktop
          paths:
            - "**/*"

  build_app_sizer:
    steps:
      - checkout
      - use_system_ruby
      - setup
      - attach_workspace:
          at: ~/Desktop
      - run:
          name: "Copy Frameworks"
          command: cp -a ~/Desktop/. ./AppSizer/AppSizer/Frameworks
      - run:
          name: "Build AppSizer App"
          command: ./Scripts/build-app-sizer.sh
      - store_artifacts:
            path: "./temp/SizeReport/TwilioVerify Size Impact Report.txt"

jobs:
  TwilioVerify Complete Suite of Tests:
    executor: macos_executor
    steps:
      - test:
          test_plan: CompleteSuite
  TwilioVerifyDemo Unit Tests:
    executor: macos_executor
    steps:
      - test:
          scheme: TwilioVerifyDemo
  Build TwilioVerify:
    executor: macos_executor
    steps:
      - build_framework:
          scheme: TwilioVerifySDK
          artifact: TwilioVerify
  Size report:
    executor: macos_executor
    steps:
      - build_app_sizer
     
workflows:
  build_and_test:
    jobs:
      - TwilioVerify Complete Suite of Tests
      # TODO: Enable this job when the target have tests otherwise the job will fail
      #- TwilioVerifyDemo Unit Tests
      - Build TwilioVerify:
          requires:
            - TwilioVerify Complete Suite of Tests
      - Size report:
          requires:
            - Build TwilioVerify

      
      